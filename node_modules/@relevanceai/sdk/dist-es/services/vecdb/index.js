var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
import { VecDBApiClient } from '../../';
import { Dataset } from './Dataset';
export function QueryBuilder() {
    return new _QueryBuilder();
}
export function FilterBuilder() {
    return new _FilterBuilder();
}
var _FilterBuilder = /** @class */ (function () {
    function _FilterBuilder() {
        this.body = { filters: [], fieldsToAggregate: [], fieldsToAggregateStats: [] };
    }
    _FilterBuilder.prototype.buildFilters = function () {
        return this.body.filters;
    };
    _FilterBuilder.prototype.rawFilter = function (filter) {
        var _a;
        (_a = this.body.filters) === null || _a === void 0 ? void 0 : _a.push(filter);
        return this;
    };
    _FilterBuilder.prototype.filter = function (type, key, value) {
        var _a;
        var _b;
        var options = [];
        for (var _i = 3; _i < arguments.length; _i++) {
            options[_i - 3] = arguments[_i];
        }
        (_b = this.body.filters) === null || _b === void 0 ? void 0 : _b.push((_a = {},
            _a[type] = __assign({ key: key, value: value }, options),
            _a));
        return this;
    };
    _FilterBuilder.prototype.match = function (field, value) {
        var _a;
        (_a = this.body.filters) === null || _a === void 0 ? void 0 : _a.push({ match: { field: field, value: value } });
        return this;
    };
    _FilterBuilder.prototype.wildcard = function (field, value) {
        var _a;
        (_a = this.body.filters) === null || _a === void 0 ? void 0 : _a.push({ wildcard: { field: field, value: value } });
        return this;
    };
    _FilterBuilder.prototype.range = function (field, options) {
        var _a;
        (_a = this.body.filters) === null || _a === void 0 ? void 0 : _a.push({ range: __assign({ field: field }, options) });
        return this;
    };
    _FilterBuilder.prototype.or = function (filters) {
        var _a;
        (_a = this.body.filters) === null || _a === void 0 ? void 0 : _a.push({ or: filters.map(function (f) { var _a; return (_a = f.body.filters) !== null && _a !== void 0 ? _a : []; }) });
        return this;
    };
    return _FilterBuilder;
}());
export { _FilterBuilder };
var _QueryBuilder = /** @class */ (function (_super) {
    __extends(_QueryBuilder, _super);
    function _QueryBuilder() {
        var _this = _super.call(this) || this;
        _this.shouldPerformTextQuery = false;
        return _this;
    }
    _QueryBuilder.prototype.build = function () {
        if (!this.shouldPerformTextQuery)
            return this.body;
        if (!this.defaultQueryValue)
            throw new Error("Please set the search query by calling .query('my search query') before performing a text search.");
        this.body.query = this.defaultQueryValue;
        return this.body;
    };
    _QueryBuilder.prototype.vector = function (field) {
        var e_1, _a;
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (!Array.isArray(this.body.vectorSearchQuery))
            this.body.vectorSearchQuery = [];
        var payload = { field: field }; // TODO components['schemas']['simpleSearchAndFlatFilterItem']['search']['vectorSearchQuery']
        var inferredModelMatch = field.match(/_(.*)_.*vector_/); // title_text@1-0_vector_ -> text@1-0
        if (inferredModelMatch && inferredModelMatch[1])
            payload.model = inferredModelMatch[1]; // this can be overridden
        try {
            for (var args_1 = __values(args), args_1_1 = args_1.next(); !args_1_1.done; args_1_1 = args_1.next()) {
                var arg = args_1_1.value;
                if (typeof arg === 'number')
                    payload.weight = arg; // weight
                else
                    payload = __assign(__assign({}, payload), arg); // options
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (args_1_1 && !args_1_1.done && (_a = args_1.return)) _a.call(args_1);
            }
            finally { if (e_1) throw e_1.error; }
        }
        this.body.vectorSearchQuery.push(payload);
        return this;
    };
    _QueryBuilder.prototype.sort = function (field, direction) {
        var _a, _b;
        if (!((_b = (_a = this === null || this === void 0 ? void 0 : this.body) === null || _a === void 0 ? void 0 : _a.sort) === null || _b === void 0 ? void 0 : _b.length))
            this.body.sort = {};
        this.body.sort[field] = direction;
        return this;
    };
    _QueryBuilder.prototype.rawOption = function (key, value) {
        this.body[key] = value;
        return this;
    };
    _QueryBuilder.prototype.minimumRelevance = function (value) {
        this.body.minimumRelevance = value;
        return this;
    };
    _QueryBuilder.prototype.page = function (value) {
        this.body.page = value;
        return this;
    };
    _QueryBuilder.prototype.pageSize = function (value) {
        this.body.pageSize = value;
        return this;
    };
    _QueryBuilder.prototype.includeFields = function (fields) {
        this.body.includeFields = fields;
        return this;
    };
    _QueryBuilder.prototype.ask = function (query, field, options) {
        var _a;
        this.body.instantAnswerQuery = __assign(__assign({ query: query, field: field, preset: (_a = options.preset) !== null && _a !== void 0 ? _a : 'support3' }, (options.titleReferenceField ? { titleReferenceField: options.titleReferenceField } : {})), (options.urlReferenceField ? { urlReferenceField: options.urlReferenceField } : {}));
        return this;
    };
    return _QueryBuilder;
}(_FilterBuilder));
export { _QueryBuilder };
var VecDBClient = /** @class */ (function () {
    function VecDBClient(config) {
        this.apiClient = new VecDBApiClient(config !== null && config !== void 0 ? config : {});
    }
    VecDBClient.prototype.dataset = function (name, options) {
        var dataset = new Dataset(this, name, options);
        return dataset;
    };
    return VecDBClient;
}());
export { VecDBClient };
