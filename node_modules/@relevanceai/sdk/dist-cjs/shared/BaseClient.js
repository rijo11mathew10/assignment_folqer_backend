"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var _a, _b;
Object.defineProperty(exports, "__esModule", { value: true });
exports._GenericClient = void 0;
const cross_fetch_1 = __importDefault(require("cross-fetch"));
const serviceConfigs_1 = require("./serviceConfigs");
const envVars = {
    project: (_a = process === null || process === void 0 ? void 0 : process.env) === null || _a === void 0 ? void 0 : _a.RELEVANCE_PROJECT,
    api_key: (_b = process === null || process === void 0 ? void 0 : process.env) === null || _b === void 0 ? void 0 : _b.RELEVANCE_API_KEY,
};
class _GenericClient {
    constructor(config) {
        this.config = config;
        this.serviceConfig = serviceConfigs_1.serviceConfigs[config.service_name];
    }
    async SendRequest({ input, path, method, options }) {
        var _a, _b, _c, _d, _e;
        const settings = {
            method,
            headers: { authorization: `${(_a = this.config.project) !== null && _a !== void 0 ? _a : envVars.project}:${(_b = this.config.api_key) !== null && _b !== void 0 ? _b : envVars.api_key}` },
        };
        if (method.toLowerCase() !== 'get')
            settings.body = JSON.stringify(input);
        const final_dataset_id = (_d = (_c = options === null || options === void 0 ? void 0 : options.dataset_id) !== null && _c !== void 0 ? _c : this.config.dataset_id) !== null && _d !== void 0 ? _d : "";
        const res = await (0, cross_fetch_1.default)(`${(_e = this.config.endpoint) !== null && _e !== void 0 ? _e : this.serviceConfig.endpoint}/latest${path.replace('{dataset_id}', final_dataset_id)}`, settings);
        if (!res.ok)
            throw new Error(`${path} ${method} failed with status ${res.status}: ${(await res.text())}`);
        const body = await res.json();
        return { body };
    }
}
exports._GenericClient = _GenericClient;
